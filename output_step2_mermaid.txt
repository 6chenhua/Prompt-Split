flowchart TD
  %% 顶层
  Start([开始：读取 {{{talk_data}}} 与 {{{input}}}]) --> Read[读取聊天信息<br/>(参见句[38]-[41])]
  Read --> QAcheck{是否为常见QA?<br/>(句[36])}
  QAcheck -- 是 --> QAAnswer[发送 QA 回答<br/>(QA Handler)]
  QAcheck -- 否 --> IsFirst{是否首次接触?<br/>(is_first_contact & !introduction_sent)<br/>(句[23],[43])}
  QAAnswer --> IsFirst

  IsFirst -- 是 --> SelfIntro[SelfIntro（一次性）<br/>发送句[44]-[45] + 模板句[47]-[53]]
  IsFirst -- 否 --> SkipIntro[跳过自我介绍]
  SelfIntro --> CollectBase[收集基础需求（FieldExtractor）<br/>(句[48]-[53])]
  SkipIntro --> CollectBase

  CollectBase --> Validate[Mapper/Validator<br/>(映射 {内容方向}/{账号类型} -> {{{userClasss}}})<br/>(句[55]-[56])]
  Validate -- 映射失败 --> UnmapPrompt[发送友好提示（句[55]）<br/>等待一次性回复]
  UnmapPrompt --> CollectBase
  Validate -- 映射成功 --> Decision{是否需要精准匹配?<br/>(句[59])}

  Decision -- 不需要（否） --> Finalizer[执行选号（发送确认引导语）<br/>(句[105])]
  Decision -- 需要（是） --> Additional[追加需求收集（句[63]-[70]<br/>逐类收集句[71]-[98]）]

  Additional --> ClarifyCheck{是否检测到模糊词汇?<br/>(句[100])}
  ClarifyCheck -- 是 --> Clarifier[澄清模糊词汇（句[101]）<br/>每项只问一次]
  ClarifyCheck -- 否 --> Finalizer
  Clarifier --> CollectBase

  Finalizer --> End([结束：已确认并开始选号提示（句[105]）])

  %% 情绪与拦截层（影响所有输出）
  subgraph Interceptors["拦截与控制"]
    Emotion[情绪策略（persona/安抚/共鸣）<br/>(句[3-6],[18],[21])]
    Timeout[回退/超时策略（句[57]）]
  end

  %% 拦截影响线
  Emotion -.-> SelfIntro
  Emotion -.-> CollectBase
  Emotion -.-> Additional
  Emotion -.-> Clarifier
  Timeout -.-> UnmapPrompt
  Timeout -.-> Finalizer

  classDef oneShot fill:#f9f,stroke:#333,stroke-width:1px;
  class SelfIntro,Finalizer oneShot;